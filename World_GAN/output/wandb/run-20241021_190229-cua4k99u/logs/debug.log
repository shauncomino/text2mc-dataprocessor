2024-10-21 19:02:29,531 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Current SDK version is 0.16.4
2024-10-21 19:02:29,531 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Configure stats pid to 16576
2024-10-21 19:02:29,531 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Loading settings from C:\Users\isabe\.config\wandb\settings
2024-10-21 19:02:29,531 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Loading settings from C:\Projects\text2mc\text2mc-dataprocessor\World_GAN\wandb\settings
2024-10-21 19:02:29,531 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Loading settings from environment variables: {}
2024-10-21 19:02:29,531 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Applying setup settings: {'_disable_service': False}
2024-10-21 19:02:29,541 INFO    MainThread:16576 [wandb_setup.py:_flush():76] Inferring run settings from compute environment: {'program_relpath': 'World_GAN\\main.py', 'program_abspath': 'C:\\Projects\\text2mc\\text2mc-dataprocessor\\World_GAN\\main.py', 'program': 'C:\\Projects\\text2mc\\text2mc-dataprocessor\\World_GAN\\main.py'}
2024-10-21 19:02:29,542 INFO    MainThread:16576 [wandb_init.py:_log_setup():526] Logging user logs to output\wandb\run-20241021_190229-cua4k99u\logs\debug.log
2024-10-21 19:02:29,542 INFO    MainThread:16576 [wandb_init.py:_log_setup():527] Logging internal logs to output\wandb\run-20241021_190229-cua4k99u\logs\debug-internal.log
2024-10-21 19:02:29,542 INFO    MainThread:16576 [wandb_init.py:init():566] calling init triggers
2024-10-21 19:02:29,543 INFO    MainThread:16576 [wandb_init.py:init():573] wandb.init called with sweep_config: {}
config: {'_initialized': True, '_explicit_bool': False, '_underscores_to_dashes': False, '_parsed': True, 'extra_args': [], 'argument_buffer': {'help': (('-h', '--help'), {'action': 'help', 'default': '==SUPPRESS==', 'help': 'show this help message and exit'})}, '_subparser_buffer': [], 'class_variables': {'tok2block_filepath': {'comment': ''}, 'not_cuda': {'comment': 'disables cuda'}, 'netG': {'comment': 'path to netG (to continue training)'}, 'netD': {'comment': 'path to netD (to continue training)'}, 'manualSeed': {'comment': ''}, 'out': {'comment': 'output directory'}, 'input_dir': {'comment': 'input directory'}, 'input_name': {'comment': 'input level filename'}, 'input_names': {'comment': ''}, 'use_multiple_inputs': {'comment': 'Original: false'}, 'input_area_name': {'comment': 'needs to be a string from the coord dictionary in input folder'}, 'output_dir': {'comment': 'folder with worlds'}, 'output_name': {'comment': 'name of the world to generate in'}, 'sub_coords': {'comment': 'defines which coords of the full coord are are'}, 'nfc': {'comment': 'number of filters for conv layers'}, 'ker_size': {'comment': 'kernel size for conv layers'}, 'num_layer': {'comment': 'number of layers'}, 'scales': {'comment': 'Scales descending (< 1 and > 0)'}, 'noise_update': {'comment': 'additive noise weight'}, 'pad_with_noise': {'comment': ''}, 'niter': {'comment': ''}, 'gamma': {'comment': 'scheduler gamma'}, 'lr_g': {'comment': 'generator learning rate'}, 'lr_d': {'comment': 'discriminator learning rate'}, 'beta1': {'comment': 'optimizer beta'}, 'Gsteps': {'comment': 'generator inner steps'}, 'Dsteps': {'comment': 'discriminator inner steps'}, 'lambda_grad': {'comment': 'gradient penalty weight'}, 'alpha': {'comment': 'reconstruction loss weight'}, 'token_list': {'comment': 'U'}, 'repr_type': {'comment': 'Which representation type to use, currently [None, block2vec, autoencoder]'}}, '_annotations': {'tok2block_filepath': <class 'str'>, 'not_cuda': <class 'bool'>, 'netG': <class 'str'>, 'netD': <class 'str'>, 'manualSeed': typing.Optional[int], 'out': <class 'str'>, 'input_dir': <class 'str'>, 'input_name': <class 'str'>, 'input_names': typing.List[str], 'use_multiple_inputs': <class 'bool'>, 'input_area_name': <class 'str'>, 'output_dir': <class 'str'>, 'output_name': <class 'str'>, 'sub_coords': typing.List[float], 'nfc': <class 'int'>, 'ker_size': <class 'int'>, 'num_layer': <class 'int'>, 'scales': typing.List[float], 'noise_update': <class 'float'>, 'pad_with_noise': <class 'bool'>, 'niter': <class 'int'>, 'gamma': <class 'float'>, 'lr_g': <class 'float'>, 'lr_d': <class 'float'>, 'beta1': <class 'float'>, 'Gsteps': <class 'int'>, 'Dsteps': <class 'int'>, 'lambda_grad': <class 'float'>, 'alpha': <class 'int'>, 'token_list': typing.List[str], 'repr_type': <class 'str'>}, 'description': None, 'argument_default': None, 'prefix_chars': '-', 'conflict_handler': 'error', '_registries': {'action': {None: <class 'argparse._StoreAction'>, 'store': <class 'argparse._StoreAction'>, 'store_const': <class 'argparse._StoreConstAction'>, 'store_true': <class 'argparse._StoreTrueAction'>, 'store_false': <class 'argparse._StoreFalseAction'>, 'append': <class 'argparse._AppendAction'>, 'append_const': <class 'argparse._AppendConstAction'>, 'count': <class 'argparse._CountAction'>, 'help': <class 'argparse._HelpAction'>, 'version': <class 'argparse._VersionAction'>, 'parsers': <class 'argparse._SubParsersAction'>, 'extend': <class 'argparse._ExtendAction'>}, 'type': {None: <function ArgumentParser.__init__.<locals>.identity at 0x000001DE9E965BD0>}}, '_actions': [_StoreAction(option_strings=['--tok2block_filepath'], dest='tok2block_filepath', nargs=None, const=None, default='tok2block.json', type=<class 'str'>, choices=None, required=False, help='(str, default=tok2block.json) ', metavar=None), _StoreFalseAction(option_strings=['--not_cuda'], dest='not_cuda', nargs=0, const=False, default=True, type=None, choices=None, required=False, help='(bool, default=True) disables cuda', metavar=None), _StoreAction(option_strings=['--netG'], dest='netG', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help='(str, default=) path to netG (to continue training)', metavar=None), _StoreAction(option_strings=['--netD'], dest='netD', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help='(str, default=) path to netD (to continue training)', metavar=None), _StoreAction(option_strings=['--manualSeed'], dest='manualSeed', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, required=False, help='(Optional[int], default=None) ', metavar=None), _StoreAction(option_strings=['--out'], dest='out', nargs=None, const=None, default='output', type=<class 'str'>, choices=None, required=False, help='(str, default=output) output directory', metavar=None), _StoreAction(option_strings=['--input_dir'], dest='input_dir', nargs=None, const=None, default='input\\minecraft', type=<class 'str'>, choices=None, required=False, help='(str, default=input\\minecraft) input directory', metavar=None), _StoreAction(option_strings=['--input_name'], dest='input_name', nargs=None, const=None, default='batch_101_2618.h5', type=<class 'str'>, choices=None, required=False, help='(str, default=batch_101_2618.h5) input level filename', metavar=None), _StoreAction(option_strings=['--input_names'], dest='input_names', nargs='*', const=None, default=['lvl_1-1.txt', 'lvl_1-2.txt'], type=<class 'str'>, choices=None, required=False, help="(List[str], default=['lvl_1-1.txt', 'lvl_1-2.txt']) ", metavar=None), _StoreFalseAction(option_strings=['--use_multiple_inputs'], dest='use_multiple_inputs', nargs=0, const=False, default=True, type=None, choices=None, required=False, help='(bool, default=True) Original: false', metavar=None), _StoreAction(option_strings=['--input_area_name'], dest='input_area_name', nargs=None, const=None, default='ruins', type=<class 'str'>, choices=None, required=False, help='(str, default=ruins) needs to be a string from the coord dictionary in input folder', metavar=None), _StoreAction(option_strings=['--output_dir'], dest='output_dir', nargs=None, const=None, default='output\\minecraft', type=<class 'str'>, choices=None, required=False, help='(str, default=output\\minecraft) folder with worlds', metavar=None), _StoreAction(option_strings=['--output_name'], dest='output_name', nargs=None, const=None, default='Gen_Empty_World', type=<class 'str'>, choices=None, required=False, help='(str, default=Gen_Empty_World) name of the world to generate in', metavar=None), _StoreAction(option_strings=['--sub_coords'], dest='sub_coords', nargs='*', const=None, default=[0.0, 1.0, 0.0, 1.0, 0.0, 1.0], type=<class 'float'>, choices=None, required=False, help='(List[float], default=[0.0, 1.0, 0.0, 1.0, 0.0, 1.0]) defines which coords of the full coord are are', metavar=None), _StoreAction(option_strings=['--nfc'], dest='nfc', nargs=None, const=None, default=64, type=<class 'int'>, choices=None, required=False, help='(int, default=64) number of filters for conv layers', metavar=None), _StoreAction(option_strings=['--ker_size'], dest='ker_size', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) kernel size for conv layers', metavar=None), _StoreAction(option_strings=['--num_layer'], dest='num_layer', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) number of layers', metavar=None), _StoreAction(option_strings=['--scales'], dest='scales', nargs='*', const=None, default=[0.75, 0.5, 0.25], type=<class 'float'>, choices=None, required=False, help='(List[float], default=[0.75, 0.5, 0.25]) Scales descending (< 1 and > 0)', metavar=None), _StoreAction(option_strings=['--noise_update'], dest='noise_update', nargs=None, const=None, default=0.1, type=<class 'float'>, choices=None, required=False, help='(float, default=0.1) additive noise weight', metavar=None), _StoreTrueAction(option_strings=['--pad_with_noise'], dest='pad_with_noise', nargs=0, const=True, default=False, type=None, choices=None, required=False, help='(bool, default=False) ', metavar=None), _StoreAction(option_strings=['--niter'], dest='niter', nargs=None, const=None, default=10, type=<class 'int'>, choices=None, required=False, help='(int, default=10) ', metavar=None), _StoreAction(option_strings=['--gamma'], dest='gamma', nargs=None, const=None, default=0.1, type=<class 'float'>, choices=None, required=False, help='(float, default=0.1) scheduler gamma', metavar=None), _StoreAction(option_strings=['--lr_g'], dest='lr_g', nargs=None, const=None, default=0.0005, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0005) generator learning rate', metavar=None), _StoreAction(option_strings=['--lr_d'], dest='lr_d', nargs=None, const=None, default=0.0005, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0005) discriminator learning rate', metavar=None), _StoreAction(option_strings=['--beta1'], dest='beta1', nargs=None, const=None, default=0.5, type=<class 'float'>, choices=None, required=False, help='(float, default=0.5) optimizer beta', metavar=None), _StoreAction(option_strings=['--Gsteps'], dest='Gsteps', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) generator inner steps', metavar=None), _StoreAction(option_strings=['--Dsteps'], dest='Dsteps', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) discriminator inner steps', metavar=None), _StoreAction(option_strings=['--lambda_grad'], dest='lambda_grad', nargs=None, const=None, default=0.1, type=<class 'float'>, choices=None, required=False, help='(float, default=0.1) gradient penalty weight', metavar=None), _StoreAction(option_strings=['--alpha'], dest='alpha', nargs=None, const=None, default=100, type=<class 'int'>, choices=None, required=False, help='(int, default=100) reconstruction loss weight', metavar=None), _StoreAction(option_strings=['--token_list'], dest='token_list', nargs='*', const=None, default=['!', '#', '-', '1', '@', 'C', 'S', 'U', 'X', 'g', 'k', 't'], type=<class 'str'>, choices=None, required=False, help="(List[str], default=['!', '#', '-', '1', '@', 'C', 'S', 'U', 'X', 'g', 'k', 't']) U", metavar=None), _StoreAction(option_strings=['--repr_type'], dest='repr_type', nargs=None, const=None, default=None, type=<class 'str'>, choices=None, required=False, help='(str, default=None) Which representation type to use, currently [None, block2vec, autoencoder]', metavar=None), _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None)], '_option_string_actions': {'--tok2block_filepath': _StoreAction(option_strings=['--tok2block_filepath'], dest='tok2block_filepath', nargs=None, const=None, default='tok2block.json', type=<class 'str'>, choices=None, required=False, help='(str, default=tok2block.json) ', metavar=None), '--not_cuda': _StoreFalseAction(option_strings=['--not_cuda'], dest='not_cuda', nargs=0, const=False, default=True, type=None, choices=None, required=False, help='(bool, default=True) disables cuda', metavar=None), '--netG': _StoreAction(option_strings=['--netG'], dest='netG', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help='(str, default=) path to netG (to continue training)', metavar=None), '--netD': _StoreAction(option_strings=['--netD'], dest='netD', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help='(str, default=) path to netD (to continue training)', metavar=None), '--manualSeed': _StoreAction(option_strings=['--manualSeed'], dest='manualSeed', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, required=False, help='(Optional[int], default=None) ', metavar=None), '--out': _StoreAction(option_strings=['--out'], dest='out', nargs=None, const=None, default='output', type=<class 'str'>, choices=None, required=False, help='(str, default=output) output directory', metavar=None), '--input_dir': _StoreAction(option_strings=['--input_dir'], dest='input_dir', nargs=None, const=None, default='input\\minecraft', type=<class 'str'>, choices=None, required=False, help='(str, default=input\\minecraft) input directory', metavar=None), '--input_name': _StoreAction(option_strings=['--input_name'], dest='input_name', nargs=None, const=None, default='batch_101_2618.h5', type=<class 'str'>, choices=None, required=False, help='(str, default=batch_101_2618.h5) input level filename', metavar=None), '--input_names': _StoreAction(option_strings=['--input_names'], dest='input_names', nargs='*', const=None, default=['lvl_1-1.txt', 'lvl_1-2.txt'], type=<class 'str'>, choices=None, required=False, help="(List[str], default=['lvl_1-1.txt', 'lvl_1-2.txt']) ", metavar=None), '--use_multiple_inputs': _StoreFalseAction(option_strings=['--use_multiple_inputs'], dest='use_multiple_inputs', nargs=0, const=False, default=True, type=None, choices=None, required=False, help='(bool, default=True) Original: false', metavar=None), '--input_area_name': _StoreAction(option_strings=['--input_area_name'], dest='input_area_name', nargs=None, const=None, default='ruins', type=<class 'str'>, choices=None, required=False, help='(str, default=ruins) needs to be a string from the coord dictionary in input folder', metavar=None), '--output_dir': _StoreAction(option_strings=['--output_dir'], dest='output_dir', nargs=None, const=None, default='output\\minecraft', type=<class 'str'>, choices=None, required=False, help='(str, default=output\\minecraft) folder with worlds', metavar=None), '--output_name': _StoreAction(option_strings=['--output_name'], dest='output_name', nargs=None, const=None, default='Gen_Empty_World', type=<class 'str'>, choices=None, required=False, help='(str, default=Gen_Empty_World) name of the world to generate in', metavar=None), '--sub_coords': _StoreAction(option_strings=['--sub_coords'], dest='sub_coords', nargs='*', const=None, default=[0.0, 1.0, 0.0, 1.0, 0.0, 1.0], type=<class 'float'>, choices=None, required=False, help='(List[float], default=[0.0, 1.0, 0.0, 1.0, 0.0, 1.0]) defines which coords of the full coord are are', metavar=None), '--nfc': _StoreAction(option_strings=['--nfc'], dest='nfc', nargs=None, const=None, default=64, type=<class 'int'>, choices=None, required=False, help='(int, default=64) number of filters for conv layers', metavar=None), '--ker_size': _StoreAction(option_strings=['--ker_size'], dest='ker_size', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) kernel size for conv layers', metavar=None), '--num_layer': _StoreAction(option_strings=['--num_layer'], dest='num_layer', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) number of layers', metavar=None), '--scales': _StoreAction(option_strings=['--scales'], dest='scales', nargs='*', const=None, default=[0.75, 0.5, 0.25], type=<class 'float'>, choices=None, required=False, help='(List[float], default=[0.75, 0.5, 0.25]) Scales descending (< 1 and > 0)', metavar=None), '--noise_update': _StoreAction(option_strings=['--noise_update'], dest='noise_update', nargs=None, const=None, default=0.1, type=<class 'float'>, choices=None, required=False, help='(float, default=0.1) additive noise weight', metavar=None), '--pad_with_noise': _StoreTrueAction(option_strings=['--pad_with_noise'], dest='pad_with_noise', nargs=0, const=True, default=False, type=None, choices=None, required=False, help='(bool, default=False) ', metavar=None), '--niter': _StoreAction(option_strings=['--niter'], dest='niter', nargs=None, const=None, default=10, type=<class 'int'>, choices=None, required=False, help='(int, default=10) ', metavar=None), '--gamma': _StoreAction(option_strings=['--gamma'], dest='gamma', nargs=None, const=None, default=0.1, type=<class 'float'>, choices=None, required=False, help='(float, default=0.1) scheduler gamma', metavar=None), '--lr_g': _StoreAction(option_strings=['--lr_g'], dest='lr_g', nargs=None, const=None, default=0.0005, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0005) generator learning rate', metavar=None), '--lr_d': _StoreAction(option_strings=['--lr_d'], dest='lr_d', nargs=None, const=None, default=0.0005, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0005) discriminator learning rate', metavar=None), '--beta1': _StoreAction(option_strings=['--beta1'], dest='beta1', nargs=None, const=None, default=0.5, type=<class 'float'>, choices=None, required=False, help='(float, default=0.5) optimizer beta', metavar=None), '--Gsteps': _StoreAction(option_strings=['--Gsteps'], dest='Gsteps', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) generator inner steps', metavar=None), '--Dsteps': _StoreAction(option_strings=['--Dsteps'], dest='Dsteps', nargs=None, const=None, default=3, type=<class 'int'>, choices=None, required=False, help='(int, default=3) discriminator inner steps', metavar=None), '--lambda_grad': _StoreAction(option_strings=['--lambda_grad'], dest='lambda_grad', nargs=None, const=None, default=0.1, type=<class 'float'>, choices=None, required=False, help='(float, default=0.1) gradient penalty weight', metavar=None), '--alpha': _StoreAction(option_strings=['--alpha'], dest='alpha', nargs=None, const=None, default=100, type=<class 'int'>, choices=None, required=False, help='(int, default=100) reconstruction loss weight', metavar=None), '--token_list': _StoreAction(option_strings=['--token_list'], dest='token_list', nargs='*', const=None, default=['!', '#', '-', '1', '@', 'C', 'S', 'U', 'X', 'g', 'k', 't'], type=<class 'str'>, choices=None, required=False, help="(List[str], default=['!', '#', '-', '1', '@', 'C', 'S', 'U', 'X', 'g', 'k', 't']) U", metavar=None), '--repr_type': _StoreAction(option_strings=['--repr_type'], dest='repr_type', nargs=None, const=None, default=None, type=<class 'str'>, choices=None, required=False, help='(str, default=None) Which representation type to use, currently [None, block2vec, autoencoder]', metavar=None), '-h': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None), '--help': _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None)}, '_action_groups': [<argparse._ArgumentGroup object at 0x000001DE9E96A320>, <argparse._ArgumentGroup object at 0x000001DE9E96A0B0>], '_mutually_exclusive_groups': [], '_defaults': {}, '_negative_number_matcher': re.compile('^-\\d+$|^-\\d*\\.\\d+$'), '_has_negative_number_optionals': [], 'prog': {}, 'usage': None, 'epilog': None, 'formatter_class': <class 'argparse.HelpFormatter'>, 'fromfile_prefix_chars': None, 'add_help': True, 'allow_abbrev': True, 'exit_on_error': True, '_positionals': <argparse._ArgumentGroup object at 0x000001DE9E96A320>, '_optionals': <argparse._ArgumentGroup object at 0x000001DE9E96A0B0>, '_subparsers': None, 'args_from_configs': [], 'tok2block_filepath': 'tok2block.json', 'not_cuda': True, 'netG': '', 'netD': '', 'manualSeed': 8831, 'out': 'output', 'input_dir': 'input\\minecraft', 'input_name': 'batch_101_2618.h5', 'input_names': ['lvl_1-1.txt', 'lvl_1-2.txt'], 'use_multiple_inputs': True, 'input_area_name': 'ruins', 'output_dir': 'output\\minecraft', 'output_name': 'Gen_Empty_World', 'sub_coords': [0.0, 1.0, 0.0, 1.0, 0.0, 1.0], 'nfc': 64, 'ker_size': 3, 'num_layer': 3, 'scales': [0.75, 0.5, 0.25], 'noise_update': 0.1, 'pad_with_noise': False, 'niter': 10, 'gamma': 0.1, 'lr_g': 0.0005, 'lr_d': 0.0005, 'beta1': 0.5, 'Gsteps': 3, 'Dsteps': 3, 'lambda_grad': 0.1, 'alpha': 100, 'token_list': ['!', '#', '-', '1', '@', 'C', 'S', 'U', 'X', 'g', 'k', 't'], 'repr_type': None, 'device': device(type='cpu'), 'nc_current': 12, 'outf': '0', 'num_scales': 3, 'noise_amp': 1.0, 'seed_road': None, 'stop_scale': 4, 'coords': [(1026, 1077), (63, 73), (1088, 1152)], 'block2repr': None}
2024-10-21 19:02:29,543 INFO    MainThread:16576 [wandb_init.py:init():616] starting backend
2024-10-21 19:02:29,543 INFO    MainThread:16576 [wandb_init.py:init():620] setting up manager
2024-10-21 19:02:29,545 INFO    MainThread:16576 [backend.py:_multiprocessing_setup():105] multiprocessing start_methods=spawn, using: spawn
2024-10-21 19:02:29,547 INFO    MainThread:16576 [wandb_init.py:init():628] backend started and connected
2024-10-21 19:02:29,552 INFO    MainThread:16576 [wandb_init.py:init():720] updated telemetry
2024-10-21 19:02:29,594 INFO    MainThread:16576 [wandb_init.py:init():753] communicating run to backend with 90.0 second timeout
2024-10-21 19:02:30,206 INFO    MainThread:16576 [wandb_run.py:_on_init():2262] communicating current version
2024-10-21 19:02:30,729 INFO    MainThread:16576 [wandb_run.py:_on_init():2271] got version response upgrade_message: "wandb version 0.18.5 is available!  To upgrade, please run:\n $ pip install wandb --upgrade"

2024-10-21 19:02:30,730 INFO    MainThread:16576 [wandb_init.py:init():804] starting run threads in backend
2024-10-21 19:02:31,044 INFO    MainThread:16576 [wandb_run.py:_console_start():2241] atexit reg
2024-10-21 19:02:31,044 INFO    MainThread:16576 [wandb_run.py:_redirect():2096] redirect: wrap_raw
2024-10-21 19:02:31,044 INFO    MainThread:16576 [wandb_run.py:_redirect():2161] Wrapping output streams.
2024-10-21 19:02:31,044 INFO    MainThread:16576 [wandb_run.py:_redirect():2186] Redirects installed.
2024-10-21 19:02:31,044 INFO    MainThread:16576 [wandb_init.py:init():847] run started, returning control to user process
2024-10-21 19:02:38,272 WARNING MsgRouterThr:16576 [router.py:message_loop():77] message_loop has been closed
